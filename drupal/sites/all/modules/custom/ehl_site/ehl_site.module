<?php
/**
 * @file
 * Code for the ehl_site feature.
 */

include_once 'ehl_site.features.inc';


function ehl_site_block_info() {
  // This example comes from node.module.
  $blocks['ehl_site_user_menu'] = array(
    'info' => t('EHL User menu'), 
    'cache' => DRUPAL_NO_CACHE,
  );
  return $blocks;
}


function ehl_site_block_view($delta = '') {
  // This example is adapted from node.module.
  $block = array();

  switch ($delta) {
    case 'ehl_site_user_menu':
      $block['subject'] = FALSE;
      $block['content'] = ehl_site_user_menu_content();
      break;
  }
  return $block;
}

function ehl_site_user_menu_content(){
	global $user;
	$content = '';
	$content .= '<ul class="nav">';
	if($user->uid) {
		$content .= '<li>' . l('My account','user/' . $user->uid .'/posts') . '</li>';
		$content .= '<li>' . l('Logout','user/logout') . '</li>';
	} else {
		$content .= '<li>' . l('Login','user') . '</li>';
	}
	$content .= '</ul>';

	return array('#markup' => $content);
}

/**
 * hook_url_outbound_alter
 **/
// Try to find a better solution for performance reason...
/*
function ehl_site_url_outbound_alter( &$path, &$options, $original_path ) {
  $current_path = explode("/", $original_path );
  if ($current_path[0] == "node" && is_numeric($current_path[1]) == "node" && empty($current_path[2])) {
    dpm($original_path);
    $node = node_load($current_path[1]);
    if($node->type == 'project'){
      $path = 'user/' . $node->uid . '/project';
    }
  }
}
*/

/**
 * hook_node_presave
 */
function ehl_site_node_presave($node) {
  if($node->type == 'post') {
    // Cute the title to make it shorter
    $node->title = substr($node->title, 0, 20);
  }
}

function ehl_site_preprocess_node(&$vars) {
  if($vars['node']->type == 'project'){
    $vars['node_url'] = url('user/' . $vars['node']->uid . '/project');
  }
}




function ehl_site_form_views_exposed_form_alter(&$form, $form_state, $form_id) {
  $nid_options = ehl_site_universities_form_options();

  $form['univeristy'] = array (
    '#type'           => 'select',
    '#multiple'       => false,
    '#required'       => false,
    '#options'        => $nid_options,
    '#default_value'  => '',
  ); 
}


function ehl_site_universities_form_options(){
  $options = array('' => t('-- All --'));
  $result = db_query("SELECT nid, title FROM {node} WHERE type = :type ORDER BY title LIMIT 50",
    array(
      ':type' => 'school',
    )
  );
  foreach($result as $record) {
    $options[$record->nid] = $record->title;
  }
  return $options;
}
